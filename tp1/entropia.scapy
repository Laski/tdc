#! /usr/bin/python
from scapy.all import *

from math import log

ipssrc = {}
ipsdst = {}

def entropia(ips):
	N = sum(ips.values())
	Ps = [ k/N for k in ips.values() ]
	H = -sum([ p*log(p,2) for p in Ps ])
	return H

def arp_monitor_callback(pkt):
    if ARP in pkt and pkt[ARP].op in (1,2): #who-has or is-at
        src = pkt[ARP].psrc
        dst = pkt[ARP].pdst

        if not ipssrc.has_key(src): ipssrc[src] = 0.0
	ipssrc[src]+= 1
        if not ipsdst.has_key(dst): ipsdst[dst] = 0.0
	ipsdst[dst]+= 1

	return "H_src=%f, H_dst=%f" % (entropia(ipsdst), entropia(ipssrc))

sniff(prn=arp_monitor_callback, filter="arp", store=0)

