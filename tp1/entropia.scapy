#! /usr/bin/python
from scapy.all import *
import matplotlib.pyplot as plot

from math import log

ipssrc = {}
ipsdst = {}
todos = []

def entropia(ips):
	N = sum(ips.values())
	Ps = [ k/N for k in ips.values() ]
	H = -sum([ p*log(p,2) for p in Ps ])
	return H

def arp_monitor_callback(pkt):
    if ARP in pkt and pkt[ARP].op in (1,2): #who-has or is-at
        src = pkt[ARP].psrc
        dst = pkt[ARP].pdst
        
        if not ipssrc.has_key(src): ipssrc[src] = 0.0
        ipssrc[src]+= 1
        if not ipsdst.has_key(dst): ipsdst[dst] = 0.0
        ipsdst[dst]+= 1
        
        todos.append((src, dst, pkt[ARP].op))
        
    return "Capture un paquete."

sniff(prn=arp_monitor_callback, filter="arp", store=0)

print
print "Capture en total " + str(len(todos)) + " paquetes."
print "Lista de sources:"
print ipssrc
print "Entropia de sources:"
print entropia(ipssrc)
print "Lista de destinos:"
print ipsdst
print "Entropia de destinos:"
print entropia(ipsdst)
print "Todos:"
print todos

labels = ipsdst.keys()
sizes = [ipsdst[key] for key in ipsdst.keys()]
plot.pie(sizes, labels=labels, autopct='%1.1f%%', shadow=True)
plot.axis('equal')
plot.show()

ips = [int(ip.split(".")[3]) for ip in ipssrc]
n, bins, patches = plot.hist(ips)
plot.xlabel('Apariciones')
plot.ylabel('Ultimos 8 bits de las IPs')
#plot.plot(n)
#plot.subplots_adjust(left=0.15)
plot.show()